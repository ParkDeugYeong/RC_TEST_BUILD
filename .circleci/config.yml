version: 2.1

orbs:
  node: circleci/node@5.1.0

workflows:
  build-and-test:
    jobs:
      - lint-and-test
      - build-expo:
          requires:
            - lint-and-test

jobs:
  lint-and-test:
    docker:
      - image: cimg/node:18.20
    steps:
      - checkout
      
      # Yarn 4.9.1 설정 (Corepack 사용)
      - run:
          name: Setup Yarn 4.9.1
          command: |
            mkdir -p ~/.corepack
            corepack enable --install-directory ~/.corepack
            echo 'export PATH="$HOME/.corepack:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            corepack prepare yarn@4.9.1 --activate
            yarn --version
            yarn config set nodeLinker node-modules
      
      # 의존성 설치
      - run:
          name: Install Dependencies
          command: |
            yarn install --immutable
            # Expo CLI와 호환되는 Metro 전체 패키지 설치
            yarn add metro@^0.80.0 metro-config@^0.80.0 metro-cache@^0.80.0 metro-core@^0.80.0 metro-runtime@^0.80.0 metro-resolver@^0.80.0 metro-transform-worker@^0.80.0 metro-babel-transformer@^0.80.0
            # Expo CLI를 프로젝트 의존성으로 설치
            yarn add -D @expo/cli
          
      # TypeScript 타입 체크
      - run:
          name: TypeScript Type Check
          command: yarn tsc --noEmit
          
      # ESLint 검사
      - run:
          name: Run ESLint
          command: yarn lint
          
      # 테스트 실행 (Jest가 설정되어 있다면)
      - run:
          name: Run Tests
          command: |
            if [ -f "jest.config.js" ] || grep -q '"test"' package.json; then
              yarn test --watchAll=false
            else
              echo "No tests found, skipping..."
            fi

  build-expo:
    docker:
      - image: cimg/node:18.20
    steps:
      - checkout
      
      # Yarn 4.9.1 설정 (Corepack 사용)
      - run:
          name: Setup Yarn 4.9.1
          command: |
            mkdir -p ~/.corepack
            corepack enable --install-directory ~/.corepack
            echo 'export PATH="$HOME/.corepack:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            corepack prepare yarn@4.9.1 --activate
            yarn --version
            yarn config set nodeLinker node-modules
            
      # 의존성 설치
      - run:
          name: Install Dependencies
          command: |
            yarn install --immutable
            # Expo CLI와 호환되는 Metro 전체 패키지 설치
            yarn add metro@^0.80.0 metro-config@^0.80.0 metro-cache@^0.80.0 metro-core@^0.80.0 metro-runtime@^0.80.0 metro-resolver@^0.80.0 metro-transform-worker@^0.80.0 metro-babel-transformer@^0.80.0
            # Expo CLI를 프로젝트 의존성으로 설치
            yarn add -D @expo/cli
          
      # Expo CLI 설치 및 인증
      - run:
          name: Install Expo CLI
          command: |
            # Yarn Berry에서는 global 명령어가 제거됨
            # yarn dlx를 사용하여 임시로 설치하고 실행
            echo "Expo CLI는 yarn dlx로 실행됩니다"
          
      - run:
          name: Expo Authentication
          command: |
            # EXPO_TOKEN 환경변수 확인 및 설정
            echo "Checking EXPO_TOKEN environment variable..."
            if [ -z "$EXPO_TOKEN" ]; then
              echo "ERROR: EXPO_TOKEN environment variable is not set"
              exit 1
            fi
            
            # Expo 환경변수 명시적 설정
            export EXPO_TOKEN=$EXPO_TOKEN
            echo "EXPO_TOKEN is set (length: ${#EXPO_TOKEN})"
            
            # 인증 상태 확인 (프로젝트에 설치된 CLI 사용)
            yarn expo whoami || echo "Authentication failed, but continuing..."
          
      # Expo 프로젝트 빌드 (모바일 전용: Android + iOS)
      - run:
          name: Build Expo Android
          command: |
            export NODE_OPTIONS="--max-old-space-size=4096"
            export EXPO_TOKEN=$EXPO_TOKEN
            yarn expo export --platform android
            
      - run:
          name: Build Expo iOS
          command: |
            export NODE_OPTIONS="--max-old-space-size=4096"
            export EXPO_TOKEN=$EXPO_TOKEN
            yarn expo export --platform ios
            
      # 빌드 결과물 저장
      - store_artifacts:
          path: dist
          destination: expo-mobile-builds
          
      # 캐시 저장
      - save_cache:
          key: expo-build-{{ .Branch }}-{{ .Revision }}
          paths:
            - dist