version: 2.1

orbs:
  node: circleci/node@5.1.0

workflows:
  build-and-test:
    jobs:
      - lint-and-test
      - build-expo:
          requires:
            - lint-and-test

jobs:
  lint-and-test:
    docker:
      - image: cimg/node:18.20
    steps:
      - checkout
      
      # Yarn 4.9.1 설정 (Corepack 사용)
      - run:
          name: Setup Yarn 4.9.1
          command: |
            mkdir -p ~/.corepack
            corepack enable --install-directory ~/.corepack
            echo 'export PATH="$HOME/.corepack:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            corepack prepare yarn@4.9.1 --activate
            yarn --version
            yarn config set nodeLinker node-modules
      
      # 의존성 설치
      - run:
          name: Install Dependencies
          command: yarn install --immutable
          
      # TypeScript 타입 체크
      - run:
          name: TypeScript Type Check
          command: yarn tsc --noEmit
          
      # ESLint 검사
      - run:
          name: Run ESLint
          command: yarn lint
          
      # 테스트 실행 (Jest가 설정되어 있다면)
      - run:
          name: Run Tests
          command: |
            if [ -f "jest.config.js" ] || grep -q '"test"' package.json; then
              yarn test --watchAll=false
            else
              echo "No tests found, skipping..."
            fi

  build-expo:
    docker:
      - image: cimg/node:18.20
    steps:
      - checkout
      
      # Yarn 4.9.1 설정 (Corepack 사용)
      - run:
          name: Setup Yarn 4.9.1
          command: |
            mkdir -p ~/.corepack
            corepack enable --install-directory ~/.corepack
            echo 'export PATH="$HOME/.corepack:$PATH"' >> $BASH_ENV
            source $BASH_ENV
            corepack prepare yarn@4.9.1 --activate
            yarn --version
            yarn config set nodeLinker node-modules
            
      # 의존성 설치
      - run:
          name: Install Dependencies
          command: yarn install --immutable
          
      # Expo CLI 설치 및 인증
      - run:
          name: Install Expo CLI
          command: yarn global add @expo/cli
          
      - run:
          name: Expo Authentication
          command: |
            echo $EXPO_TOKEN | expo login --stdin
          
      # Expo 프로젝트 빌드 (모바일 전용: Android + iOS)
      - run:
          name: Build Expo Android
          command: |
            export NODE_OPTIONS="--max-old-space-size=4096"
            yarn expo export --platform android
            
      - run:
          name: Build Expo iOS
          command: |
            export NODE_OPTIONS="--max-old-space-size=4096"
            yarn expo export --platform ios
            
      # 빌드 결과물 저장
      - store_artifacts:
          path: dist
          destination: expo-mobile-builds
          
      # 캐시 저장
      - save_cache:
          key: expo-build-{{ .Branch }}-{{ .Revision }}
          paths:
            - dist